DistributedDataParallel(
  (module): NeuralNetwork(
    (encoder): Sequential(
      (0): Conv1d(1, 8, kernel_size=(3,), stride=(1,), padding=(1,))
      (1): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (2): ReLU()
      (3): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Conv1d(8, 16, kernel_size=(3,), stride=(1,), padding=(1,))
      (5): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (6): ReLU()
      (7): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Conv1d(16, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (9): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (10): ReLU()
      (11): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (13): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): ReLU()
      (15): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (17): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (18): ReLU()
      (19): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (20): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (21): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (22): ReLU()
      (23): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (24): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (25): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (26): ReLU()
      (27): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (28): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (29): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (30): ReLU()
      (31): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (bottleneck): Sequential(
      (0): Flatten(start_dim=1, end_dim=-1)
      (1): Linear(in_features=128, out_features=2, bias=True)
      (2): Linear(in_features=2, out_features=128, bias=True)
      (3): ReLU()
    )
    (decoder): Sequential(
      (0): Upsample(scale_factor=2.0, mode='linear')
      (1): ConvTranspose1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (2): ReLU()
      (3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): Upsample(scale_factor=2.0, mode='linear')
      (5): ConvTranspose1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (6): ReLU()
      (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): Upsample(scale_factor=2.0, mode='linear')
      (9): ConvTranspose1d(128, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (10): ReLU()
      (11): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): Upsample(scale_factor=2.0, mode='linear')
      (13): ConvTranspose1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (14): ReLU()
      (15): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (16): Upsample(scale_factor=2.0, mode='linear')
      (17): ConvTranspose1d(64, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (18): ReLU()
      (19): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (20): Upsample(scale_factor=2.0, mode='linear')
      (21): ConvTranspose1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (22): ReLU()
      (23): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (24): Upsample(scale_factor=2.0, mode='linear')
      (25): ConvTranspose1d(32, 16, kernel_size=(3,), stride=(1,), padding=(1,))
      (26): ReLU()
      (27): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (28): Upsample(scale_factor=2.0, mode='linear')
      (29): ConvTranspose1d(16, 8, kernel_size=(3,), stride=(1,), padding=(1,))
      (30): ReLU()
      (31): BatchNorm1d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (32): Conv1d(8, 1, kernel_size=(3,), stride=(1,), padding=(1,))
      (33): Upsample(size=340, mode='linear')
    )
  )
)